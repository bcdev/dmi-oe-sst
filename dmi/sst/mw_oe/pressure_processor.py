import numpy as np

from dmi.sst.util.default_data import DefaultData


class PressureProcessor:
    A_COEFFS = np.float32(
        np.array([0.000000, 20.000000, 38.425343, 63.647804, 95.636963, 134.483307, 180.584351, 234.779053, 298.495789, 373.971924, 464.618134, 575.651001, 713.218079, 883.660522, 1094.834717,
                  1356.474609, 1680.640259, 2082.273926, 2579.888672, 3196.421631, 3960.291504, 4906.708496, 6018.019531, 7306.631348, 8765.053711, 10376.126953, 12077.446289, 13775.325195,
                  15379.805664, 16819.474609, 18045.183594, 19027.695313, 19755.109375, 20222.205078, 20429.863281, 20384.480469, 20097.402344, 19584.330078, 18864.750000, 17961.357422, 16899.468750,
                  15706.447266, 14411.124023, 13043.218750, 11632.758789, 10209.500977, 8802.356445, 7438.803223, 6144.314941, 4941.778320, 3850.913330, 2887.696533, 2063.779785, 1385.912598,
                  855.361755, 467.333588, 210.393890, 65.889244, 7.367743, 0.000000, 0.000000]))

    B_COEFFS = np.float32(
        np.array([0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,
                  0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000076, 0.000461, 0.001815, 0.005081, 0.011143, 0.020678, 0.034121, 0.051690, 0.073534, 0.099675, 0.130023, 0.164384,
                  0.202476, 0.243933, 0.288323, 0.335155, 0.383892, 0.433963, 0.484772, 0.535710, 0.586168, 0.635547, 0.683269, 0.728786, 0.771597, 0.811253, 0.847375, 0.879657, 0.907884, 0.931940,
                  0.951822, 0.967645, 0.979663, 0.988270, 0.994019, 0.997630, 1.000000]))

    def calculate_pressure_levels(self, sea_level_pressure):
        num_levels = len(self.A_COEFFS) - 1
        num_measures = len(sea_level_pressure)

        target_data = DefaultData.create_default_array(num_levels, num_measures, np.float32, fill_value=np.NaN)
        for i in range(0, num_measures):
            p_f = np.float32(sea_level_pressure[i]) * self.B_COEFFS + self.A_COEFFS
            target_data[i, :] = p_f[1:61] - p_f[0:60]
        return target_data
